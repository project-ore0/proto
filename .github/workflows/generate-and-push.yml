name: Generate and Push Protocol Buffers Code

on:
  push:
    branches:
      - main  # Change this if your default branch has a different name
    paths:
      - 'proto/**'  # Only run when proto files change
      - 'Makefile'  # Or when the Makefile changes
      - '.devcontainer/**'  # Or when the devcontainer configuration changes
  
  # Allow manual triggering of the workflow
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual trigger'
        required: false
        default: 'Manual regeneration of protocol buffer files'

jobs:
  generate-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for proper branch creation
          submodules: 'recursive'  # Checkout submodules recursively
      
      - name: Set up Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
      
      - name: Pre-build dev container image
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/project-ore0/proto-ci
          cacheFrom: ghcr.io/project-ore0/proto-ci
          push: always
      
      # Use the devcontainer to generate the Protocol Buffer code
      - name: Generate Protocol Buffer code in devcontainer
        uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/project-ore0/proto-ci
          push: never
          runCmd: |
            make clean && make all
      
      - name: Create and push generated branch
        run: |
          # Get the current commit hash for versioning
          COMMIT_HASH=$(git rev-parse --short HEAD)
          git checkout --orphan generated-$COMMIT_HASH
          
          # Remove everything
          git rm -rf --cached .
          
          # Add only the generated files
          git add --force generated/
          
          # Commit the generated files
          git commit -m "Generated files from commit $COMMIT_HASH"
          
          # Push to the new branch
          git push origin generated-$COMMIT_HASH --force
          
          # Also update the 'generated' branch to always point to the latest
          git branch -f generated generated-$COMMIT_HASH
          git push origin generated --force
          
          # Return to the original branch
          git checkout -
